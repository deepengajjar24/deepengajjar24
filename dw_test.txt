CREATE OR REPLACE PROCEDURE DW_DEV.HAH.GET_STAGE_ALAYACARE_FACT_REVENUE("STR_ETL_TASK_KEY" VARCHAR(16777216), "STR_CDC_START" VARCHAR(16777216), "STR_CDC_END" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE JAVASCRIPT
EXECUTE AS OWNER
AS '
        var sql = `
    --*****************************************************************************************************************************
-- NAME:  ALAYACARE_FACT_REVENUE
--
-- PURPOSE: Creates one row per Invoice_Item_ID according to AlayaCare 
--
-- DEVELOPMENT LOG:
-- DATE        AUTHOR                NOTES:
-- --------    -------------------   -----------------------------------------------------------------------------------------------
-- 11/09/21		Mir Ali				Initial version
-- 15/03/21     Jashvant Patel      Removed GA filter and added join for Configuration table
-- 19/07/21     Deepen Gajjar       Modified Contract Key logic
-- 28/12/22     Deepen Gajjar       Modified logic for branch, client and employee key logic
-- 25/04/23		Pinkal Panchal		Modified logic for AMOUNT_BILLED, AMOUNT_COLLECTED, AMOUNT_OUTSTANDING
--*****************************************************************************************************************************
--
INSERT OVERWRITE INTO STAGE.ALAYACARE_FACT_REVENUE
WITH EMPLOYEE AS 
(
SELECT * FROM 
(
	SELECT EMPLOYEE_ID,MASTER_ID,EMPLOYEE_ID AS ORIGINAL_RECORD_ID,BRANCH_ID
	FROM  DISC_DEDUPE_DEV.ALAYACARE.EMPLOYEE_MASTER_LIST  
) 
UNION
SELECT * FROM 
(
	SELECT DISTINCT ID,MASTER_ID,ID AS ORIGINAL_RECORD_ID,BRANCH_ID
	FROM DISC_DEDUPE_DEV.ALAYACARE.EMPLOYEE_MATCH_LIST 
	WHERE ID NOT IN (SELECT EMPLOYEE_ID FROM DISC_DEDUPE_DEV.ALAYACARE.EMPLOYEE_MASTER_LIST ) 
) 
)
, CLIENT AS  --VISIT DATA
(
SELECT * FROM 
(
	SELECT CLIENT_ID,MASTER_ID,CLIENT_ID AS ORIGINAL_RECORD_ID,GUID,BRANCH_ID
	FROM  DISC_DEDUPE_DEV.ALAYACARE.CLIENT_MASTER_LIST 
) 
UNION
SELECT * FROM 
(
	SELECT DISTINCT ID,MASTER_ID,ID AS ORIGINAL_RECORD_ID,GUID,BRANCH_ID
	FROM DISC_DEDUPE_DEV.ALAYACARE.CLIENT_MATCH_LIST 
	WHERE ID NOT IN (SELECT CLIENT_ID FROM DISC_DEDUPE_DEV.ALAYACARE.CLIENT_MASTER_LIST ) 
) 
)
SELECT DATA.* FROM ( 
SELECT 	MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || COALESCE(GROUPS.BRANCH_ID, SERVICES.BRANCH_ID, FUNDERS.BRANCH_ID, -1) || '')'' || ''-'' || INVOICE_ITEM.INVOICE_ITEM_ID || ''-'' || ''ALAYACARE'') AS REVENUE_KEY,
		COALESCE(VISITS.START_AT, MIN(INVOICE_ITEM.PROPERTIES_TBL_ACC_INVOICE_ITEM_ITEM_START_AT) OVER (PARTITION BY INVOICE_ITEM.INVOICE_ID)) AS REPORT_DATE,
		MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || COALESCE(GROUPS.BRANCH_ID, SERVICES.BRANCH_ID, FUNDERS.BRANCH_ID, -1) || '')'' || ''-'' || NVL(TRIM(GROUPS.GROUP_ID),''Unknown'') || ''-'' || ''ALAYACARE'') AS BRANCH_KEY,
		MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || COALESCE(GROUPS.BRANCH_ID, SERVICES.BRANCH_ID, FUNDERS.BRANCH_ID, -1) || '')'' || ''-'' || NVL(E.MASTER_ID::NUMBER, -1) || ''-'' || ''ALAYACARE'') AS EMPLOYEE_KEY,
		MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || COALESCE(GROUPS.BRANCH_ID, SERVICES.BRANCH_ID, FUNDERS.BRANCH_ID, -1) || '')'' || ''-'' || NVL(C.MASTER_ID::NUMBER,-1) || ''-'' || ''ALAYACARE'') AS CLIENT_KEY,
--		MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || COALESCE(GROUPS.BRANCH_ID, SERVICES.BRANCH_ID, FUNDERS.BRANCH_ID, -1) || '')''|| ''-'' || NVL(TO_VARCHAR(SERVICES.SERVICE_FUNDER_ID), ''Unknown'') || ''-'' || NVL(TO_VARCHAR(SERVICES.SERVICE_CODE_ID), ''Unknown'') || ''-'' || COALESCE(VISITS.VISIT_COMPUTED_RATE_BILLITEM_ID::STRING, SERVICE_CODE_BILL_CODE.BILL_CODE_ID::STRING, ''Unknown'') || ''-'' || ''ALAYACARE'') AS CONTRACT_KEY,
        MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || COALESCE(GROUPS.BRANCH_ID, SERVICES.BRANCH_ID, FUNDERS.BRANCH_ID, -1) || '')''|| ''-'' || NVL(TO_VARCHAR(SERVICES.SERVICE_FUNDER_ID), ''Unknown'') || ''-'' || NVL(TO_VARCHAR(SERVICES.SERVICE_CODE_ID), ''Unknown'') || ''-'' || ''ALAYACARE'') AS CONTRACT_KEY,
		MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || COALESCE(GROUPS.BRANCH_ID, SERVICES.BRANCH_ID, FUNDERS.BRANCH_ID, -1) || '')'' || ''-'' || NVL(INVOICE_ITEM.INVOICE_ID,-1) || ''-'' || ''ALAYACARE'') AS INVOICE_KEY,
		9 AS SOURCE_SYSTEM_ID,
		MD5(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || COALESCE(GROUPS.BRANCH_ID, SERVICES.BRANCH_ID, FUNDERS.BRANCH_ID, -1) || '')''||''-''||NVL(TRIM(B.PROFILE_STATE),''Unknown'') || ''-'' || NVL(GROUPS.GROUP_ID,-1) || ''-'' || ''ALAYACARE'') AS SUPERVISOR_KEY,
--		COALESCE(INVOICE_ITEM.PAYMENT_DATE, INVOICE_ITEM.PAYMENT_CREATION_DATE, INVOICE_ITEM.UPDATED_AT, INVOICE_ITEM.CREATED_AT) AS REVENUE_DATE,		--Changes made on 30/03/23 as per the discussion with Phil
		COALESCE(INVOICE_ITEM.UPDATED_AT, INVOICE_ITEM.CREATED_AT,INVOICE_ITEM.PAYMENT_DATE, INVOICE_ITEM.PAYMENT_CREATION_DATE) AS REVENUE_DATE,
--		COALESCE(INVOICE_ITEM.PAYMENT_DATE, INVOICE_ITEM.PAYMENT_CREATION_DATE, INVOICE_ITEM.UPDATED_AT, INVOICE_ITEM.CREATED_AT) AS PAYMENT_DATE,
		COALESCE(INVOICE_DETAIL.PROPERTIES_INVOICE_UPDATE_TIME,INVOICE_ITEM.PAYMENT_DATE, INVOICE_ITEM.PAYMENT_CREATION_DATE) AS PAYMENT_DATE,
		UPPER(TRIM(GROUPS.PROFILE_COMPANY))  AS BRANCH_NAME,
		NVL(E.MASTER_ID,VISITS.EMPLOYEE_ID) AS EMPLOYEE_ID, 
		NVL(C.MASTER_ID,VISITS.CLIENT_ID) AS CLIENT_NUMBER,
		NVL(TO_VARCHAR(SERVICES.SERVICE_FUNDER_ID), ''Unknown'') AS CONTRACT_CODE,
		INVOICE_ITEM.INVOICE_ID AS INVOICE_NUMBER,
		''Regular'' AS INVOICE_TYPE,
		1 AS NUMBER_OF_CLIENTS,
		UPPER(NVL(TRIM(B.PROPERTIES_TBL_GT_ACCOUNT_DESCRIPTION), ''Unknown'') || '' ('' || COALESCE(GROUPS.BRANCH_ID, SERVICES.BRANCH_ID, FUNDERS.BRANCH_ID, -1) || '')'') AS SYSTEM_CODE,
		UPPER(TRIM(B.PROFILE_STATE)) || ''-'' || NVL(GROUPS.GROUP_ID,-1) AS SUPERVISOR_CODE,
		NVL(TO_VARCHAR(SERVICES.SERVICE_CODE_ID), ''Unknown'') AS BILL_CODE,
		CASE LOWER(TRIM(INVOICE_ITEM.PROPERTIES_TBL_ACC_INVOICE_ITEM_QUANTITY_UNITS)) 
			WHEN ''hours'' THEN 
				COALESCE(
					TRY_CAST(INVOICE_ITEM.PROPERTIES_TBL_ACC_INVOICE_ITEM_QUANTITY AS DECIMAL(18, 3)),
					NULLIF(VISITS.VISIT_HOURS_APPROVED, 0),
					NULLIF(VISITS.VISIT_SCHEDULED_DURATION, 0))
			WHEN ''visits'' THEN 
				COALESCE(
					NULLIF(VISITS.VISIT_HOURS_APPROVED, 0),
					NULLIF(VISITS.VISIT_SCHEDULED_DURATION, 0),
					TRY_CAST(INVOICE_ITEM.PROPERTIES_TBL_ACC_INVOICE_ITEM_QUANTITY AS DECIMAL(18, 3)))
			ELSE INVOICE_ITEM.PROPERTIES_TBL_ACC_INVOICE_ITEM_QUANTITY END AS INVOICE_HOURS,
		IFF(NVL(INVOICE_HOURS, 0) = 0, NULL, INVOICE_ITEM.INVOICE_ITEM_AMOUNT / INVOICE_HOURS) AS INVOICE_RATE,
--Changes made for RCM on 04/01/2022
--		NVL(INVOICE_ITEM.INVOICE_ITEM_AMOUNT, 0) AS AMOUNT_BILLED,
--		NVL(INVOICE_ITEM.INVOICE_ITEM_AMOUNT, 0) - NVL(INVOICE_ITEM.INVOICE_ITEM_BALANCE, 0) AS AMOUNT_COLLECTED,
--		NVL(INVOICE_ITEM.INVOICE_ITEM_BALANCE, 0) AS AMOUNT_OUTSTANDING,
-- Changes made on 25/04/23 for RCM by Pinkal
	NVL(INVOICE_DETAIL.PROPERTIES_INVOICE_TOTAL,0)/COUNT(1) OVER (PARTITION BY INVOICE_ITEM.INVOICE_ID  ORDER BY INVOICE_ITEM.INVOICE_ID) AS AMOUNT_BILLED,
	(NVL(INVOICE_DETAIL.PROPERTIES_INVOICE_TOTAL,0) - NVL(INVOICE_DETAIL.PROPERTIES_INVOICE_BALANCE,0))/COUNT(1) OVER (PARTITION BY INVOICE_ITEM.INVOICE_ID  ORDER BY INVOICE_ITEM.INVOICE_ID) AS AMOUNT_COLLECTED,
	NVL(INVOICE_DETAIL.PROPERTIES_INVOICE_BALANCE,0)/COUNT(1) OVER (PARTITION BY INVOICE_ITEM.INVOICE_ID  ORDER BY INVOICE_ITEM.INVOICE_ID) AS AMOUNT_OUTSTANDING,
		-- ETL Fields
		
        `;    
             sql += STR_ETL_TASK_KEY;
             sql +=  
             ` AS ETL_TASK_KEY,
        
        
        `;    
             sql += STR_ETL_TASK_KEY;
             sql +=  
             ` AS ETL_INSERTED_TASK_KEY,
        
        convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_INSERTED_DATE,
	    CURRENT_USER as ETL_INSERTED_BY ,
	    convert_timezone(''UTC'', CURRENT_TIMESTAMP)::timestamp_ntz as ETL_LAST_UPDATED_DATE,
	    CURRENT_USER as ETL_LAST_UPDATED_BY,
	    0 as ETL_DELETED_FLAG
	FROM DISC_DEV.ALAYACARE.INVOICE_ITEM AS INVOICE_ITEM
	INNER JOIN DISC_DEV.ALAYACARE.INVOICE_DETAILS AS INVOICE_DETAIL ON INVOICE_ITEM.INVOICE_ID = INVOICE_DETAIL.INVOICE_ID
	LEFT JOIN DISC_DEV.ALAYACARE.SERVICE AS SERVICES ON SERVICES.SERVICE_ID = INVOICE_ITEM.SERVICE_ID
	LEFT JOIN DISC_DEV.ALAYACARE.SERVICE_CODE_BILL_CODE AS SERVICE_CODE_BILL_CODE
        ON SERVICE_CODE_BILL_CODE.FUNDER_ID = COALESCE(SERVICES.SERVICE_FUNDER_ID, INVOICE_ITEM.FUNDER_ID)
            AND SERVICE_CODE_BILL_CODE.SERVICE_CODE_ID = SERVICES.SERVICE_CODE_ID
    LEFT JOIN DISC_DEV.ALAYACARE.FUNDER AS FUNDERS ON FUNDERS.FUNDER_ID = INVOICE_ITEM.FUNDER_ID
	LEFT JOIN DISC_DEV.ALAYACARE.VISIT AS VISITS ON VISITS.VISIT_ID = INVOICE_ITEM.VISIT_ID 
	LEFT JOIN EMPLOYEE E ON VISITS.EMPLOYEE_ID = E.EMPLOYEE_ID AND COALESCE(VISITS.BRANCH_ID, SERVICES.BRANCH_ID,FUNDERS.BRANCH_ID) = E.BRANCH_ID   
	LEFT JOIN  CLIENT C
	ON COALESCE(INVOICE_ITEM.CLIENT_ID, VISITS.CLIENT_ID) = C.CLIENT_ID AND COALESCE(VISITS.BRANCH_ID, SERVICES.BRANCH_ID,FUNDERS.BRANCH_ID) = C.BRANCH_ID 	
    LEFT JOIN DISC_DEV.ALAYACARE.TBL_GUID_COST_CENTRE_TIER_4 COST_CENTRE_MAPPING
		ON COST_CENTRE_MAPPING.GUID_TO = C.GUID
	LEFT JOIN DISC_DEV.ALAYACARE.TBL_COST_CENTRES_TIER_4 AS COST_CENTRE
		ON COST_CENTRE.ID = COST_CENTRE_MAPPING.COST_CENTRE_ID
	LEFT JOIN DISC_DEV.ALAYACARE.GROUPS AS GROUPS
		ON GROUPS.BRANCH_ID = COST_CENTRE.PROPERTIES_BRANCH_ID
		AND GROUPS.PROFILE_COMPANY = COST_CENTRE.PROPERTIES_DESCRIPTION
	LEFT JOIN DISC_DEV.ALAYACARE.BRANCH B 
		ON B.BRANCH_ID = COALESCE(GROUPS.BRANCH_ID, SERVICES.BRANCH_ID, FUNDERS.BRANCH_ID)
	WHERE INVOICE_ITEM.INVOICE_ID IS NOT NULL
)  DATA
INNER JOIN DISC_DEV.ALAYACARE.CONFIGURATION CONFIG 
	ON UPPER(CONFIG.SYSTEM_CODE) = UPPER(DATA.SYSTEM_CODE)
	AND CONFIG.CONFIGURATION_ACTIVE=TRUE
	AND CONFIG.SYSTEM_CODE IS NOT NULL
;
`;
          try {
                snowflake.execute (
                    {sqlText: sql}
                    );
                return "Succeeded.";   // Return a success/error indicator.
                }
            catch (err)  {
                return "Failed: " + err;   // Return a success/error indicator.
                }  
          ';